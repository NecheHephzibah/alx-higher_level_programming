The ``0-add_integer.py`` module
-------------------------------

Using ``add_integer``
=====================

mport module:
    >>> add_integer = __import__('0-add_integer').add_integer

Test the function normally:
    >>> add_integer(2, 3)
    5

Test one negative arg:
    >>> add_integer(2, -3)
    -1

Test addition of floating points:
    >>> add_integer(2.0, 3.0)
    5

Test addition of negative floats:
    >>> add_integer(-2.9, -0.2)
    -2

Test for negative int and float:
    >>> add_integer(2.3, -3)
    -1

Test if the default value is still working:
    >>> add_integer(2)
    100

Test for addition of string and int:
    >>> add_integer("hello", 3)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Test when the second arg is a string:
    >>> add_integer(2, "hello")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

Tests when the args passed is None:
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Test addition of float and None:
    >>> add_integer(2.3, None)
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

Test addition of two strings:
    >>> add_integer("hello", "there")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Test if function fails when infinity is passed:
    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

Test when one is infinity:
    >>> add_integer(2, float('inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

Test when not a number is passed:
    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

Test when on arg is not a number:
    >>> add_integer(2, float('nan'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer
